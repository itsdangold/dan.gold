.intro {
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: start;
  padding: var(--site-margin);
}


.intro__description {
  width: auto;

  p {
    color: var(--text-primary);
  }

  p, a {
    max-width: 40ch;
  
    + * {
      margin-top: .75em;
    }
  }
}

.intro__title {
  font-size: calc(.25rem + (21vw - (var(--site-margin))));

  display: flex;
  flex-wrap: nowrap;
  text-transform: uppercase;
  font-weight: 900;
  transform: translate3d(-1.3%, -.075em, 0);
  letter-spacing: -.065em;

  color: var(--white);
  opacity: 1;

  margin-top: 4.25rem;
  
  --shadow-stretch: calc(1 + (var(--scrollY-pos) * 0.01));

  [data-theme="light"] & {
    color: var(--white);

    @mixin text-shadow-light($steps: 40) {
      $shadow: ();
  
      @for $i from 1 through $steps {
        $lightness: 85% + ($i * .25);
        $x-offset: calc(($i * -.06vw) * var(--shadow-stretch));
        $y-offset: calc(($i * .1vw) * var(--shadow-stretch));
        $shadow: append($shadow, #{$x-offset} #{$y-offset} hsl(var(--hue), 40%, $lightness), comma);
      }
      text-shadow: $shadow;
    }
  
    @include text-shadow-light();
  }

  [data-theme="dark"] & {
    color: var(--text);
    
    @mixin text-shadow-dark($steps: 40) {
      $shadow: ();
  
      @for $i from 1 through $steps {
        $lightness: 2% + ($i * .25);
        $x-offset: calc(($i * -.06vw) * var(--shadow-stretch));
        $y-offset: calc(($i * .1vw) * var(--shadow-stretch));
        $shadow: append($shadow, #{$x-offset} #{$y-offset} hsl(var(--hue), 17%, $lightness), comma);
  
      }
      text-shadow: $shadow;
    }
  
    @include text-shadow-dark();
  }

  [data-theme="blueprint"] & {
    color: hsl(223, 100%, 100%);

    @mixin text-shadow-blueprint($steps: 40) {
      $shadow: ();
  
      @for $i from 1 through $steps {
        $lightness: 39% + ($i * .25);
        $x-offset: calc(($i * -.06vw) * var(--shadow-stretch));
        $y-offset: calc(($i * .1vw) * var(--shadow-stretch));
        $shadow: append($shadow, #{$x-offset} #{$y-offset} hsla(223, 100%, 39%, .02), comma);
  
      }
      text-shadow: $shadow;
    }
  
    @include text-shadow-blueprint();
  }

  [data-theme="international"] & {
    color: var(--text);
    
    @mixin text-shadow-international($steps: 40) {
      $shadow: ();
  
      @for $i from 1 through $steps {
        $lightness: 40% + ($i * .25);
        $x-offset: calc(($i * -.06vw) * var(--shadow-stretch));
        $y-offset: calc(($i * .1vw) * var(--shadow-stretch));
        $shadow: append($shadow, #{$x-offset} #{$y-offset} hsl(22, 100%, $lightness), comma);
  
      }
      text-shadow: $shadow;
    }
  
    @include text-shadow-international();
  }
  
  [data-theme="neo"] & {
    color: var(--text);
    text-shadow: var(--glow);
  }
  
  &::before, &::after {
    content: '';
    position: absolute;
    left: 0;
    width: 100%;
    height: 50%;
    opacity: .5;
    z-index: 1;
  }

  &::before {
    top: -45%;
  }

  &::after {
    top: 82%;
  }
}

.letter {
  transform-origin: center;
  display: inline-block;
  margin: 0;
  user-select: none;
  outline: none;
  padding: 0 .04em;
  margin: 0 -.04em;
  
  &::selection {
    background: none;
    color: var(--text);
  }

  &::before {
    content: attr(data-letter);
    color: var(--shadow-2);
    position: absolute;
    z-index: -1;
  }

  @for $i from 1 through 10 {
    &:nth-child(#{$i}) {
      z-index: #{10 - $i};
    }
  }

  &:nth-child(1 of .letter) {
    letter-spacing: -.095em;
  }

  &:nth-child(2 of .letter) {
    letter-spacing: -.05em;
  }
  
  &:nth-child(4 of .letter) {
    margin-left: .05em;
  }
  
  &:nth-child(5 of .letter) {
    letter-spacing: -.07em;
  }

  &:nth-child(6 of .letter) {
    letter-spacing: -.05em;
  }
}